apiVersion: apps/v1
kind: Deployment
metadata:
  name: iris-serving
  namespace: mlops-pipeline
  labels:
    app: iris-serving
spec:
  replicas: 2
  selector:
    matchLabels:
      app: iris-serving
  template:
    metadata:
      labels:
        app: iris-serving
    spec:
      containers:
      - name: iris-serving
        image: gcr.io/YOUR_PROJECT_ID/iris-serving:latest
        ports:
        - containerPort: 8000
        env:
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        - name: MODEL_PATH
          value: "/app/models/iris_classifier.joblib"
        - name: SCALER_PATH
          value: "/app/data/scaler.pkl"
        - name: PYTHONPATH
          value: "/app"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
          readOnly: true
        - name: data-storage
          mountPath: /app/data
          readOnly: true
        - name: gcp-service-account
          mountPath: /var/secrets/google
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc
      - name: data-storage
        persistentVolumeClaim:
          claimName: data-pvc
      - name: gcp-service-account
        secret:
          secretName: gcp-service-account-key

---
apiVersion: v1
kind: Service
metadata:
  name: iris-serving-service
  namespace: mlops-pipeline
  labels:
    app: iris-serving
spec:
  selector:
    app: iris-serving
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: mlops-pipeline
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iris-serving-ingress
  namespace: mlops-pipeline
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "iris-serving-ip"
    networking.gke.io/managed-certificates: "iris-serving-ssl-cert"
spec:
  rules:
  - host: iris-api.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: iris-serving-service
            port:
              number: 8000

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: iris-serving-ssl-cert
  namespace: mlops-pipeline
spec:
  domains:
    - iris-api.your-domain.com